---

- name: 🧪 Verificar que el sistema es Linux y RHEL-based
  ansible.builtin.assert:
    that:
      - ansible_os_family == 'RedHat'
    fail_msg: "❌ Este rol solo es compatible con sistemas basados en RHEL (RedHat, CentOS, Alma, Rocky)."
    success_msg: "✅ Sistema operativo compatible: {{ ansible_distribution }}"

- name: 🧪 Verificar si LVM está instalado
  ansible.builtin.command: which lvs
  register: lvm_check
  changed_when: false
  failed_when: lvm_check.rc != 0

- name: 📦 Verificar que el paquete `lvm2` está instalado
  ansible.builtin.package:
    name: lvm2
    state: present

- name: 🧪 Validar que existe el Volume Group 'rhel'
  ansible.builtin.command: vgs rhel
  register: vg_check
  changed_when: false
  failed_when: vg_check.rc != 0
  ignore_errors: false

- name: 🧪 Validar que no exista ya el LV 'lv_nimsoft'
  ansible.builtin.command: lvs /dev/rhel/lv_nimsoft
  register: lv_check
  failed_when: lv_check.rc == 0
  changed_when: false
  ignore_errors: true

- name: 🧪 Verificar que haya al menos 5 GB disponibles en el VG
  ansible.builtin.command: vgs --units g --noheadings -o vg_free rhel
  register: vg_free
  changed_when: false

- name: 🚨 Validar espacio libre en VG
  ansible.builtin.assert:
    that:
      - (vg_free.stdout | trim | regex_replace("g", "") | float) >= 5
    fail_msg: "❌ No hay al menos 5 GB libres en el Volume Group 'rhel'."
    success_msg: "✅ Hay suficiente espacio libre para crear lv_nimsoft."
  when: lv_check.rc != 0

- name: 🧪 Validar existencia de ejecutable de rpm
  ansible.builtin.command: which rpm
  register: rpm_check
  changed_when: false
  failed_when: rpm_check.rc != 0

# - name: 🧪 Verificar conectividad a MinIO para descargar instalador
#   ansible.builtin.uri:
#     url: "{{ uim_installer_url }}"
#     method: HEAD
#     status_code: 200
#     timeout: 10
#   register: minio_connect
#   failed_when: minio_connect.status != 200
#   changed_when: false

- name: 🔍 Verificar si ya existe instalación previa de Nimbus
  ansible.builtin.stat:
    path: /opt/nimsoft/bin/niminit
  register: nimsoft_installed

- name: 🚫 Abortar si Nimbus ya está instalado
  ansible.builtin.fail:
    msg: "⚠️ Ya existe una instalación previa de Nimsoft en /opt/nimsoft. Aborta para evitar sobrescribir."
  when: nimsoft_installed.stat.exists

- name: ✅ Mostrar resumen del sistema antes de instalar
  ansible.builtin.debug:
    msg: |
      Sistema: {{ ansible_distribution }} {{ ansible_distribution_version }}
      IP: {{ ansible_default_ipv4.address }}
      Hostname: {{ ansible_hostname }}