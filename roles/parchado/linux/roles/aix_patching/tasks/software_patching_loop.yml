---

- name: Mount NFS volume
  block:

    - name: Mount NFS volume  # noqa command-instead-of-module
      ansible.builtin.command: mount {{ item.0 }} {{ nfs_mountpoint }}
      changed_when: true

  rescue:

    - name:
        Return code generation in case of
        NFS volume mount failure
      ansible.builtin.include_role:
        name: returncode
      vars:
        rc_support: "developer"
        rc_group: "component_playbook"
        rc_number: 5030
        rc_message:
          "Mounting remote NFS volume has failed.
          Further investigation is required by the developer."

    - name: Set exec_message
      ansible.builtin.set_fact:
        exec_message:
          "{{ exec_message }}
          Mounting remote NFS volume has failed.\n\n
          Aborting the patching process.\n\n"

    - name: Send communication
      ansible.builtin.include_tasks: send_notification.yml

    - name: Remove lock file
      ansible.builtin.file:
        path:
          /etc/ansible/facts.d{{
          '' if lock_file_dir.changed else '/unix_patching.fact' }}
        state: absent

    - name: End the job for the host {{ inventory_hostname }}
      ansible.builtin.fail:
        msg: "NFS volume mount failed"
      when: fail_on_error | bool

    - name: Set continue_execution flag
      ansible.builtin.set_fact:
        continue_execution: false

- name: Update software to the latest level on media
  block:

    - name: Update software to the latest level on media
      ansible.builtin.command: install_all_updates -Yd {{ item.1 }}
      changed_when: true

    - name: Software update is successful
      ansible.builtin.set_fact:
        exec_message:
          "{{ exec_message }}
          Software has been updated successfully using below fileset:\n\n
          {{ item.1 }}\n\n"

  rescue:

    - name:
        Return code generation in case of
        software update failure
      ansible.builtin.include_role:
        name: returncode
      vars:
        rc_support: "developer"
        rc_group: "component_playbook"
        rc_number: 5039
        rc_message:
          "Software update has failed.
          Further investigation is required by the developer."

    - name: Set exec_message
      ansible.builtin.set_fact:
        exec_message:
          "{{ exec_message }}
          Software update command has failed.\n\n"

    - name: Send communication
      ansible.builtin.include_tasks: send_notification.yml

    - name: Remove lock file
      ansible.builtin.file:
        path:
          /etc/ansible/facts.d{{
          '' if lock_file_dir.changed else '/unix_patching.fact' }}
        state: absent

    - name: End the job for the host {{ inventory_hostname }}
      ansible.builtin.fail:
        msg: "Software update has failed"
      when: fail_on_error | bool

    - name: Set continue_execution flag
      ansible.builtin.set_fact:
        continue_execution: false

- name: Set returncode
  ansible.builtin.include_role:
    name: returncode
  vars:
    rc_success: true
  when: continue_execution

- name: Unmount NFS volume
  block:

    - name: Unmount NFS volume
      ansible.posix.mount:
        path: "{{ nfs_mountpoint }}"
        state: unmounted

  rescue:

    - name: Unmount NFS volume in force mode
      ansible.builtin.command: umount -f {{ nfs_mountpoint }}
      register: umount_out
      ignore_errors: true
      changed_when: true

    - name: Umount command failed
      when: umount_out is failed
      block:

        - name:
            Return code generation in case of
            NFS volume unmount failure
          ansible.builtin.include_role:
            name: returncode
          vars:
            rc_support: "developer"
            rc_group: "component_playbook"
            rc_number: 5034
            rc_message:
              "Unmounting remote NFS volume has failed.
              Further investigation is required by the developer"

        - name: Set exec_message
          ansible.builtin.set_fact:
            exec_message:
              "{{ exec_message }}
              Unmounting remote NFS volume has failed.\n\n"

        - name: Send communication
          ansible.builtin.include_tasks: send_notification.yml

        - name: Remove lock file
          ansible.builtin.file:
            path:
              /etc/ansible/facts.d{{
              '' if lock_file_dir.changed else '/unix_patching.fact' }}
            state: absent

        - name: End the job for the host {{ inventory_hostname }}
          ansible.builtin.fail:
            msg: "NFS volume unmount failed"
          when: fail_on_error | bool

        - name: Set continue_execution flag
          ansible.builtin.set_fact:
            continue_execution: false
