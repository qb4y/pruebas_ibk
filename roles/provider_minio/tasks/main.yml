---
# - name: 🔁 Cargar variables de MinIO a todos los hosts
#   set_fact:
#     minio: "{{ vault_all_secrets.minio }}"

# - name: 🔁 Propagar variables de MinIO a todos los hosts
#   set_fact:
#     minio_host: "{{ minio.vault_minio_host }}"
#     minio_port: "{{ minio.vault_minio_port }}"
#     minio_user: "{{ minio.vault_minio_user }}"
#     minio_password: "{{ minio.vault_minio_password }}"
#     minio_bucket: "{{ minio.vault_minio_bucket_name }}"
#   delegate_to: localhost
#   run_once: true
#   tags: ["vault"]

# - name: Validar variables de MinIO
#   ansible.builtin.assert:
#     that:
#       - minio_host is defined
#       - minio_port is defined
#       - minio_user is defined
#       - minio_password is defined
#       - minio_bucket is defined
#     fail_msg: "❌ Variables de MinIO no fueron cargadas correctamente desde Vault"
#   tags: [vault]

- name: Definir valores de MinIO para entorno actual
  ansible.builtin.set_fact:
    minio_host: "minio.fake"
    minio_port: 9000
    minio_user: "minioadmin"
    minio_password: "minioadmin"
    minio_bucket: "instaladores"
    provider_minio_product: "crowdstrike"
    PROVIDER_MINIO_INCLUDE_CERTIFICATES: false

- name: Mostrar configuración del proveedor dinámico
  ansible.builtin.debug:
    msg:
      - "🎯 Producto: {{ provider_minio_product }}"
      - "📦 Incluir certificados: {{ PROVIDER_MINIO_INCLUDE_CERTIFICATES }}"
      - "🪣 Bucket: {{ minio_bucket }}"
      - "🔄 Ejecutado desde entorno local"

- name: Generar URLs de descarga dinámicas
  ansible.builtin.include_tasks: generate_urls.yml
