---
# - name: üîÅ Cargar variables de MinIO a todos los hosts
#   set_fact:
#     minio: "{{ vault_all_secrets.minio }}"

# - name: üîÅ Propagar variables de MinIO a todos los hosts
#   set_fact:
#     minio_host: "{{ minio.vault_minio_host }}"
#     minio_port: "{{ minio.vault_minio_port }}"
#     minio_user: "{{ minio.vault_minio_user }}"
#     minio_password: "{{ minio.vault_minio_password }}"
#     minio_bucket: "{{ minio.vault_minio_bucket_name }}"
#   delegate_to: localhost
#   run_once: true
#   tags: ["vault"]

# - name: Validar variables de MinIO
#   ansible.builtin.assert:
#     that:
#       - minio_host is defined
#       - minio_port is defined
#       - minio_user is defined
#       - minio_password is defined
#       - minio_bucket is defined
#     fail_msg: "‚ùå Variables de MinIO no fueron cargadas correctamente desde Vault"
#   tags: [vault]

- name: ‚ùå Simular error al configurar alias de MinIO en mc
  ansible.builtin.command: >
    mc alias set miMinio http://{{ minio_host }}:{{ minio_port }} {{ minio_user }} {{ minio_password }}
  register: simulated_mc_result
  changed_when: true
  failed_when: true
  delegate_to: localhost
  run_once: true
  args:
    warn: false
  environment:
    # Evita intentar ejecuci√≥n real (opcional si est√°s en entorno aislado)
    PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

- name: üí• Forzar resultado de error en alias set
  ansible.builtin.set_fact:
    simulated_mc_result:
      rc: 1
      stderr: >
        mc: <ERROR> Unable to initialize new alias from the provided credentials.
        Get "http://{{ minio_host }}:{{ minio_port }}/probe-bsign-xxyy/?location=":
        dial tcp: lookup {{ minio_host }} on 10.96.0.10:53: no such host.
      stdout: ""
  when: true # Siempre aplicar en entorno de simulaci√≥n

- name: ‚ùå Detener ejecuci√≥n por error simulado
  ansible.builtin.fail:
    msg: "{{ simulated_mc_result.stderr }}"
  when: simulated_mc_result.rc != 0
