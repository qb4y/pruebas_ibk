- name: Obtener credenciales de Vault para '{{ vault_key }}'
  uri:
    url: "{{ VC_VAULT_URL }}{{ vault_path }}"
    method: GET
    headers:
      X-Vault-Token: "{{ VC_VAULT_TOKEN }}"
    return_content: true
    status_code: [200]
    validate_certs: false
  delegate_to: localhost
  run_once: true
  register: vault_response
  failed_when: >
    vault_response.json.data is not defined or
    vault_response.json.data.data is not defined or
    vault_response.status != 200

- name: Validar respuesta de Vault para '{{ vault_key }}'
  assert:
    that:
      - vault_response is defined
      - vault_response.json is defined
      - vault_response.json.data is defined
      - vault_response.json.data.data is defined
      - vault_response.json.data.data | length > 0
    fail_msg: "❌ Vault '{{ vault_key }}' has no valid data"
    success_msg: "✅ Vault '{{ vault_key }}' response is valid"
  delegate_to: localhost
  run_once: true
  no_log: true

- name: Guardar datos de '{{ vault_key }}' en vault_all_secrets
  set_fact:
    vault_all_secrets: >-
      {{
        vault_all_secrets | combine(
          { vault_key: vault_response.json.data.data },
          recursive=True
        )
      }}
  delegate_to: localhost
  run_once: true